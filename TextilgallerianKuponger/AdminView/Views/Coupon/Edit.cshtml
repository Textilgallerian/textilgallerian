@using AdminView.ViewModel
@model CouponViewModel

@{
    ViewBag.Title = "Redigera rabatt";
}

<h2 class="ui large header">@ViewBag.Title</h2>
<div class="row">
    <div class="column">
        <form class="ui form" method="post">
            @Html.AntiForgeryToken()


            <div class="field">
                <label>
                    Kupongtyp
                </label>
                @Model.Type
            </div>



            <div class="field">
                <label>
                    Kampanjnamn
                    @Html.TextBoxFor(m => m.Parameters["Name"], new { required = "required " })
                </label>
            </div>
        <div class="field">
            <label>
                Kampanjkod
                @Html.TextBoxFor(m => m.Parameters["Code"], new {required = "required "})
            </label>
        </div>

            <div class="field">
                <label>
                    Beskrivning
                    @Html.TextAreaFor(m => m.Parameters["Description"])
                </label>
            </div>
            <div class="field">
                <div class="ui three column grid">
                    <div class="column">
                        <label>
                            Minsta köpsumma
                            <div class="ui corner labeled input">
                                @Html.TextBoxFor(m => m.Parameters["MinPurchase"], new { type = "number", min = 0, required = "required " })
                                <div class="ui corner label">
                                    <i class="icon">Kr</i>
                                </div>
                            </div>
                        </label>
                        <div class="help">
                            Minsta totalsumma på kundvagnen innan avdragen rabatt
                        </div>
                    </div>
                    <div class="column">
                        <label>
                            Ange hur många produkter kund behöver köpa
                            @Html.TextBoxFor(m => m.Parameters["NumberOfProductsToBuy"], new { type = "number", min = 0, required = "required " })
                        </label>
                        <div class="help">
                            T.ex. Köp 3 varor för att rabatten ska gälla
                        </div>
                    </div>
                    <div class="column">
                        <div class="ui right labeled icon input">
                            <label>
                                Hur många gånger får rabatten användas?
                                @Html.TextBoxFor(m => m.Parameters["UseLimit"], new { type = "number", min = 0 })
                            </label>
                        </div>
                        <div class="help">
                            Hur många gånger rabatten får användas av samma kund eller hur många gånger samma kod får användas.
                            Lämna fältet tomt för att låta kunden använda rabatten hur många gånger hen vill.
                        </div>
                    </div>
                </div>
            </div>

            <div class="twelve wide column campaign-code">
                <div class="ui one column center aligned stackable divided grid">
                    <div class="column">
                        <div class="ui icon header">
                            <i class="users icon"></i>
                            Kunder
                        </div>

                        <div class="ui fluid category search" id="user-search">
                            <div class="ui icon input">
                                <input class="prompt" type="text" id="userinput" placeholder="Sök i kundfält..">
                                <i class="search icon" id="customer"></i>
                            </div>
                            <div class="results"></div>
                        </div>
                        <div class="ui hidden divider"></div>
                        <div class="field">
                            <label>
                                Kunder
                                @Html.TextAreaFor(m => m.CustomerString, new { @id = "users" })
                            </label>
                        </div>
                    </div>
                </div>
            </div>
            <div class="twelve wide column">
                <div class="ui three column center aligned stackable divided grid">
                    <div class="column">
                        <div class="ui icon header">
                            <i class="tags icon"></i>
                            Produkter
                        </div>
                        <div class="ui fluid category search">
                            <div class="ui icon input">
                                <input class="prompt positive" type="text" placeholder="Sök på produkter..">
                                <i class="tags  icon"></i>
                            </div>
                            <div class="result"></div>
                            <div class="ui hidden divider"></div>
                            <div class="field">
                                @Html.TextAreaFor(m => m.ProductsString)
                            </div>
                        </div>
                    </div>
                    <div class="column">
                        <div class="ui icon header">
                            <i class="barcode icon"></i>
                            Märken
                        </div>
                        <div class="ui fluid category search" id="user-search">
                            <div class="ui icon input">
                                <input class="prompt" type="text" id="userinput" placeholder="Sök  Kategorier/Märken.">
                                <i class="search icon" id="customer"></i>
                            </div>
                            <div class="results"></div>
                        </div>
                        <div class="ui hidden divider"></div>
                        <div class="field">
                            @Html.TextAreaFor(m => m.BrandsString)
                        </div>
                    </div>
                    <div class="column">
                        <div class="ui icon header">
                            <i class="database icon"></i>
                            Kategorier
                        </div>
                        <select class="ui fluid search dropdown" id="category-dropdown">
                            <option value="">Kategorier</option>
                        </select>
                        <div class="ui hidden divider"></div>
                        <div class="field">
                            @Html.TextAreaFor(m => m.CategoriesString)
                        </div>
                    </div>

                </div>
            </div>


        <div class="ui two column grid">
            <div class="column">
                <label>
                    Startdatum:
                    @Html.TextBoxFor(m => m.Parameters["Start"], new {type = "date", required = "required "})
                </label>
            </div>
            <div class="column">
                <label>
                    Slutdatum:
                    @Html.TextBoxFor(m => m.Parameters["End"], new {type = "date"})
                </label>
            </div>
        </div>
            <div class="ui hidden divider"></div>
            @if (Model.Parameters.ContainsKey("PayFor"))
            {
                <div class="field specific-field BuyXProductsPayForYProduct">
                    <label>
                        Ange hur många produkter kund behöver betala för
                        @Html.TextBoxFor(m => m.Parameters["PayFor"], new {type = "number", min = 0, step = "0.1", required = "required "})
                    </label>
                    <div class="help">
                        T.ex. Vid köp av 3 varor så ska detta antal betalas för
                    </div>
                </div>
            }
            @if (Model.Parameters.ContainsKey("Amount"))
            {
                <div class="field specific-field TotalSumAmountDiscount ">
                    <label>
                        Rabatt i kr
                        @Html.TextBoxFor(m => m.Parameters["Amount"], new { type = "number", min = 0, placeholder = "Rabatt i kr", step = "0.1", required = "required " })

                    </label>
                </div>
            }
            @if (Model.Parameters.ContainsKey("AmountOfProducts"))
            {
                <div class="field specific-field BuyProductXRecieveProductY ">
                    <label>
                        Antal gratis produkter
                        @Html.TextBoxFor(m => m.Parameters["AmountOfProducts"], new { type = "number", min = 0, placeholder = "Hur många?", step = "0.1", required = "required " })
                    </label>
                </div>
            }
            @if (Model.Parameters.ContainsKey("FreeProduct"))
            {
                <div class="field">
                    <label>
                        @Model.Parameters["ProductName"]
                        @Html.TextBoxFor(m => m.Parameters["FreeProduct"], new { required = "required " })
                    </label>
                </div>
            }
            @if (Model.Parameters.ContainsKey("Percentage"))
            {
                <div class="field">
                    <label>
                        Procentuell rabatt
                        @Html.TextBoxFor(m => m.Parameters["Percentage"], new { type = "number", min = 0, max = 100, required = "required " })
                    </label>
                </div>
                <div class="field">
                    <label>
                        Procenten gäller för hela kundvagnen.
                        @Html.CheckBoxFor(m => m.PercentageDiscountOnWholeCart)
                    </label>
                </div>
            }
            <div class="field">
                <label>
                    Kampanjen kan kombineras med andra kampanjer.
                    @Html.CheckBoxFor(m => m.CanBeCombined)
                </label>
            </div>
            @Html.HiddenFor(m => m.Parameters["UniqueKey"])
            <input type="submit" name="name" class="ui button green" value="Ändra rabatt" />
        </form>
    </div>
</div>

@section scripts {
    @Scripts.Render("~/Bundles/JSON")
    @Scripts.Render("~/Bundles/CreateCoupon")
}
